{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useLocation, Navigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { routeNames } from \"../router\";\nimport { auth } from '../actions/user';\n\nconst RequireAuth = ({\n  children\n}) => {\n  _s();\n\n  const location = useLocation();\n  const isAuth = useSelector(state => state.user.isAuth);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(auth());\n  }, []); // if (!isAuth) {\n  //     return <Navigate to={routeNames.LOGIN} state={{from: location}} />\n  // }\n\n  return children;\n};\n\n_s(RequireAuth, \"dAiuAw3B6dLDZr3rBf4xvjYTpXQ=\", false, function () {\n  return [useLocation, useSelector, useDispatch];\n});\n\n_c = RequireAuth;\nexport default RequireAuth;\n\nvar _c;\n\n$RefreshReg$(_c, \"RequireAuth\");","map":{"version":3,"sources":["C:/Users/Anton/Desktop/react organizer/organizer/src/hoc/RequireAuth.js"],"names":["React","useEffect","useLocation","Navigate","useDispatch","useSelector","routeNames","auth","RequireAuth","children","location","isAuth","state","user","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,QAAtB,QAAsC,kBAAtC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAASC,IAAT,QAAqB,iBAArB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAClC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,MAAM,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,MAArB,CAA1B;AACA,QAAMG,QAAQ,GAAGV,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACba,IAAAA,QAAQ,CAACP,IAAI,EAAL,CAAR;AACF,GAFQ,EAEN,EAFM,CAAT,CALkC,CASlC;AACA;AACA;;AAEA,SAAOE,QAAP;AACH,CAdD;;GAAMD,W;UACeN,W,EACFG,W,EACED,W;;;KAHfI,W;AAgBN,eAAeA,WAAf","sourcesContent":["import React, {useEffect} from 'react';\r\nimport { useLocation, Navigate } from 'react-router-dom';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { routeNames } from \"../router\";\r\nimport { auth } from '../actions/user';\r\n\r\nconst RequireAuth = ({ children }) => {\r\n    const location = useLocation();\r\n    const isAuth = useSelector(state => state.user.isAuth);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n       dispatch(auth());\r\n    }, []);\r\n\r\n    // if (!isAuth) {\r\n    //     return <Navigate to={routeNames.LOGIN} state={{from: location}} />\r\n    // }\r\n\r\n    return children;\r\n};\r\n\r\nexport default RequireAuth;\r\n"]},"metadata":{},"sourceType":"module"}