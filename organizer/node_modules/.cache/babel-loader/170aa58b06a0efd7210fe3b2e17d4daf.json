{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\Desktop\\\\react organizer\\\\organizer\\\\src\\\\components\\\\AppRouter.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Routes, Route } from 'react-router-dom';\nimport MainPage from \"../pages/MainPage\";\nimport Weather from \"../pages/Weather\";\nimport Currency from \"../pages/Currency\";\nimport Login from \"../pages/Login\";\nimport { routeNames } from \"../router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const {\n    isAuth\n  } = useSelector(state => state.isAuth);\n  return isAuth ? /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: routeNames.MAINPAGE,\n      element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: routeNames.WEATHER,\n      element: /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 59\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: routeNames.CURRENCY,\n      element: /*#__PURE__*/_jsxDEV(Currency, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 60\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n    children: [\"console.log(routeNames.LOGIN);\", /*#__PURE__*/_jsxDEV(Route, {\n      path: routeNames.LOGIN,\n      element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"*\",\n      element: /*#__PURE__*/_jsxDEV(MainPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n};\n\n_s(AppRouter, \"j1iNDdaI87Xf6fHwciId9lA56rc=\", false, function () {\n  return [useSelector];\n});\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/Anton/Desktop/react organizer/organizer/src/components/AppRouter.jsx"],"names":["React","useSelector","Routes","Route","MainPage","Weather","Currency","Login","routeNames","AppRouter","isAuth","state","MAINPAGE","WEATHER","CURRENCY","LOGIN"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,UAAT,QAA2B,WAA3B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAaT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA9B;AAEA,SACIA,MAAM,gBAEF,QAAC,MAAD;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEF,UAAU,CAACI,QAAxB;AAAkC,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEJ,UAAU,CAACK,OAAxB;AAAiC,MAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEL,UAAU,CAACM,QAAxB;AAAkC,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,KAAD;AACI,MAAA,IAAI,EAAC,GADT;AAEI,MAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAFb;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFE,gBAYF,QAAC,MAAD;AAAA,8DAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEN,UAAU,CAACO,KAAxB;AAA+B,MAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,KAAD;AACI,MAAA,IAAI,EAAC,GADT;AAEI,MAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAFb;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAbR;AAsBH,CAzBD;;GAAMN,S;UACiBR,W;;;KADjBQ,S;AA2BN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux'\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport MainPage from \"../pages/MainPage\";\r\nimport Weather from \"../pages/Weather\";\r\nimport Currency from \"../pages/Currency\";\r\nimport Login from \"../pages/Login\";\r\nimport { routeNames } from \"../router\";\r\n\r\nconst AppRouter = () => {\r\n    const { isAuth } = useSelector(state => state.isAuth);\r\n\r\n    return (\r\n        isAuth\r\n            ?\r\n            <Routes>\r\n                <Route path={routeNames.MAINPAGE} element={<MainPage />} />\r\n                <Route path={routeNames.WEATHER} element={<Weather />} />\r\n                <Route path={routeNames.CURRENCY} element={<Currency />} />\r\n                <Route\r\n                    path=\"*\"\r\n                    element={<Login />}\r\n                />\r\n            </Routes>\r\n            :\r\n            <Routes>\r\n                console.log(routeNames.LOGIN);\r\n                <Route path={routeNames.LOGIN} element={<Login />} />\r\n                <Route\r\n                    path=\"*\"\r\n                    element={<MainPage />}\r\n                />\r\n            </Routes>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n"]},"metadata":{},"sourceType":"module"}