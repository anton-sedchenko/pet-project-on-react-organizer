{"ast":null,"code":"const defaultState = {\n  tasks: JSON.parse(localStorage.getItem('tasks'))\n};\nexport const tasksReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'ADD_TASK':\n      localStorage.setItem('tasks', JSON.stringify([...state.tasks, action.payload]));\n      return { ...state,\n        tasks: [...state.tasks, action.payload]\n      };\n\n    case 'REMOVE_TASK':\n      const newTasksArr = [...state.tasks].filter(task => task.id !== action.payload.taskId);\n      localStorage.setItem('tasks', JSON.stringify(newTasksArr));\n      return { ...state,\n        tasks: newTasksArr\n      };\n\n    case 'UPDATE_TASK':\n      const updatedTasksArr = [...state.tasks].map(task => {\n        if (task.id === action.payload.taskId) {\n          return { ...task,\n            pointsDone: action.payload.pointsDone,\n            currentLevel: action.payload.currentLevel\n          };\n        }\n\n        return task;\n      });\n      localStorage.setItem('tasks', JSON.stringify(updatedTasksArr));\n      return { ...state,\n        tasks: updatedTasksArr\n      };\n\n    case 'COMPLETE_TASK':\n      const tasksListAfterCompleteOne = [...state.tasks].map(task => {\n        if (task.id === action.payload.taskId) {\n          return { ...task,\n            complete: true\n          };\n        }\n\n        return task;\n      });\n      localStorage.setItem('tasks', JSON.stringify(tasksListAfterCompleteOne));\n      return { ...state,\n        tasks: tasksListAfterCompleteOne\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Anton/Desktop/react organizer/organizer/src/store/tasksReducer.js"],"names":["defaultState","tasks","JSON","parse","localStorage","getItem","tasksReducer","state","action","type","setItem","stringify","payload","newTasksArr","filter","task","id","taskId","updatedTasksArr","map","pointsDone","currentLevel","tasksListAfterCompleteOne","complete"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX;AADU,CAArB;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACIL,MAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACS,SAAL,CAAe,CAAC,GAAGJ,KAAK,CAACN,KAAV,EAAiBO,MAAM,CAACI,OAAxB,CAAf,CAA9B;AAEA,aAAO,EAAE,GAAGL,KAAL;AAAYN,QAAAA,KAAK,EAAE,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAiBO,MAAM,CAACI,OAAxB;AAAnB,OAAP;;AACJ,SAAK,aAAL;AACI,YAAMC,WAAW,GAAG,CAAC,GAAGN,KAAK,CAACN,KAAV,EAAiBa,MAAjB,CAAwBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACI,OAAP,CAAeK,MAA3D,CAApB;AACAb,MAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACS,SAAL,CAAeE,WAAf,CAA9B;AAEA,aAAO,EAAE,GAAGN,KAAL;AAAYN,QAAAA,KAAK,EAAEY;AAAnB,OAAP;;AACJ,SAAK,aAAL;AACI,YAAMK,eAAe,GAAG,CAAC,GAAGX,KAAK,CAACN,KAAV,EAAiBkB,GAAjB,CAAqBJ,IAAI,IAAI;AACjD,YAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACI,OAAP,CAAeK,MAA/B,EAAuC;AACnC,iBAAO,EAAE,GAAGF,IAAL;AAAWK,YAAAA,UAAU,EAAEZ,MAAM,CAACI,OAAP,CAAeQ,UAAtC;AAAkDC,YAAAA,YAAY,EAAEb,MAAM,CAACI,OAAP,CAAeS;AAA/E,WAAP;AACH;;AAED,eAAON,IAAP;AACH,OANuB,CAAxB;AAOAX,MAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACS,SAAL,CAAeO,eAAf,CAA9B;AAEA,aAAO,EAAE,GAAGX,KAAL;AAAYN,QAAAA,KAAK,EAAEiB;AAAnB,OAAP;;AACJ,SAAK,eAAL;AACI,YAAMI,yBAAyB,GAAG,CAAC,GAAGf,KAAK,CAACN,KAAV,EAAiBkB,GAAjB,CAAqBJ,IAAI,IAAI;AAC3D,YAAIA,IAAI,CAACC,EAAL,KAAYR,MAAM,CAACI,OAAP,CAAeK,MAA/B,EAAuC;AACnC,iBAAO,EAAE,GAAGF,IAAL;AAAWQ,YAAAA,QAAQ,EAAE;AAArB,WAAP;AACH;;AAED,eAAOR,IAAP;AACH,OANiC,CAAlC;AAOAX,MAAAA,YAAY,CAACM,OAAb,CAAqB,OAArB,EAA8BR,IAAI,CAACS,SAAL,CAAeW,yBAAf,CAA9B;AAEA,aAAO,EAAE,GAAGf,KAAL;AAAYN,QAAAA,KAAK,EAAEqB;AAAnB,OAAP;;AACJ;AACI,aAAOf,KAAP;AAjCR;AAmCH,CApCM","sourcesContent":["const defaultState = {\r\n    tasks: JSON.parse(localStorage.getItem('tasks'))\r\n};\r\nexport const tasksReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TASK':\r\n            localStorage.setItem('tasks', JSON.stringify([...state.tasks, action.payload]));\r\n\r\n            return { ...state, tasks: [...state.tasks, action.payload] };\r\n        case 'REMOVE_TASK':\r\n            const newTasksArr = [...state.tasks].filter(task => task.id !== action.payload.taskId);\r\n            localStorage.setItem('tasks', JSON.stringify(newTasksArr));\r\n\r\n            return { ...state, tasks: newTasksArr };\r\n        case 'UPDATE_TASK':\r\n            const updatedTasksArr = [...state.tasks].map(task => {\r\n                if (task.id === action.payload.taskId) {\r\n                    return { ...task, pointsDone: action.payload.pointsDone, currentLevel: action.payload.currentLevel };\r\n                }\r\n\r\n                return task;\r\n            });\r\n            localStorage.setItem('tasks', JSON.stringify(updatedTasksArr));\r\n\r\n            return { ...state, tasks: updatedTasksArr };\r\n        case 'COMPLETE_TASK':\r\n            const tasksListAfterCompleteOne = [...state.tasks].map(task => {\r\n                if (task.id === action.payload.taskId) {\r\n                    return { ...task, complete: true };\r\n                }\r\n\r\n                return task;\r\n            });\r\n            localStorage.setItem('tasks', JSON.stringify(tasksListAfterCompleteOne));\r\n\r\n            return { ...state, tasks: tasksListAfterCompleteOne };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}