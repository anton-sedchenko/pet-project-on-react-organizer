{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\Desktop\\\\react organizer\\\\organizer\\\\src\\\\components\\\\AppRouter.jsx\";\nimport React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport { privateRoutes, publicRoutes, routeNames } from '../router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  const auth = true;\n  return auth === true ? /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [privateRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        exact: route.exact,\n        element: route.component\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this)), /*#__PURE__*/_jsxDEV(Navigate, {\n        to: routeNames.MAINPAGE\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [publicRoutes.map(route => /*#__PURE__*/_jsxDEV(Route, {\n        path: route.path,\n        exact: route.exact,\n        element: route.component\n      }, route.path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Navigate, {\n        to: routeNames.LOGIN\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 13\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/Anton/Desktop/react organizer/organizer/src/components/AppRouter.jsx"],"names":["React","Routes","Route","Navigate","privateRoutes","publicRoutes","routeNames","AppRouter","auth","map","route","path","exact","component","MAINPAGE","LOGIN"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,UAAtC,QAAwD,WAAxD;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,IAAI,GAAG,IAAb;AAEA,SACIA,IAAI,KAAK,IAAT,gBAEI,QAAC,MAAD;AAAA,2BACI;AAAA,iBACMJ,aAAa,CAACK,GAAd,CAAkBC,KAAK,iBACrB,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,KAAK,CAACC,IAAnB;AACO,QAAA,KAAK,EAAED,KAAK,CAACE,KADpB;AAEO,QAAA,OAAO,EAAEF,KAAK,CAACG;AAFtB,SAGYH,KAAK,CAACC,IAHlB;AAAA;AAAA;AAAA;AAAA,cADF,CADN,eAQI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEL,UAAU,CAACQ;AAAzB;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAFJ,gBAeI,QAAC,MAAD;AAAA,2BACI;AAAA,iBACET,YAAY,CAACI,GAAb,CAAiBC,KAAK,iBACpB,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEA,KAAK,CAACC,IAAnB;AACO,QAAA,KAAK,EAAED,KAAK,CAACE,KADpB;AAEO,QAAA,OAAO,EAAEF,KAAK,CAACG;AAFtB,SAGYH,KAAK,CAACC,IAHlB;AAAA;AAAA;AAAA;AAAA,cADF,CADF,eAQA,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEL,UAAU,CAACS;AAAzB;AAAA;AAAA;AAAA;AAAA,cARA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAhBR;AA6BH,CAhCD;;KAAMR,S;AAkCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport { privateRoutes, publicRoutes, routeNames } from '../router';\r\n\r\nconst AppRouter = () => {\r\n    const auth = true;\r\n\r\n    return (\r\n        auth === true\r\n            ?\r\n            <Routes>\r\n                <>\r\n                    { privateRoutes.map(route =>\r\n                        <Route path={route.path}\r\n                               exact={route.exact}\r\n                               element={route.component}\r\n                               key={route.path}\r\n                        />)\r\n                    }\r\n                    <Navigate to={routeNames.MAINPAGE} />\r\n                </>\r\n            </Routes>\r\n            :\r\n            <Routes>\r\n                <>\r\n                { publicRoutes.map(route =>\r\n                    <Route path={route.path}\r\n                           exact={route.exact}\r\n                           element={route.component}\r\n                           key={route.path}\r\n                    />)\r\n                }\r\n                <Navigate to={routeNames.LOGIN} />\r\n                </>\r\n            </Routes>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n"]},"metadata":{},"sourceType":"module"}