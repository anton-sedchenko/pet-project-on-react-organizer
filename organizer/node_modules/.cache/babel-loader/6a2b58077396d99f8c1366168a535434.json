{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\Desktop\\\\react organizer\\\\organizer\\\\src\\\\components\\\\AppRouter.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Tasks from \"../pages/Tasks\";\nimport Weather from \"../pages/Weather\";\nimport Currency from \"../pages/Currency\";\nimport Login from \"../pages/Login\";\nimport Registration from \"../pages/Registration\";\nimport RequireAuth from \"../hoc/RequireAuth\";\nimport { routeNames } from \"../router\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const isAuth = useSelector(state => state.user.isAuth);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: !isAuth ? /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: routeNames.LOGIN,\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: routeNames.REGISTRATION,\n        element: /*#__PURE__*/_jsxDEV(Registration, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 64\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: routeNames.TASKS,\n        element: /*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: routeNames.WEATHER,\n        element: /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: routeNames.CURRENCY,\n        element: /*#__PURE__*/_jsxDEV(Currency, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 60\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Navigate, {\n        to: routeNames.TASKS\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false); //     <Routes>\n  //         <Route path={routeNames.LOGIN} element={<Login />} />\n  //         <Route path={routeNames.REGISTRATION} element={<Registration />} />\n  //         <Route path={routeNames.MAIN} element={\n  //             <RequireAuth>\n  //                     <Routes>\n  //                         <Route path={routeNames.TASKS} element={<Tasks />} />\n  //                         <Route path={routeNames.WEATHER} element={<Weather />} />\n  //                         <Route path={routeNames.CURRENCY} element={<Currency />} />\n  //                     </Routes>\n  //             </RequireAuth>\n  //         } />\n  //     </Routes>\n  // );\n};\n\n_s(AppRouter, \"ccLlqVdYzn3X5NS8YnsdgLyqe+g=\", false, function () {\n  return [useSelector];\n});\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/Anton/Desktop/react organizer/organizer/src/components/AppRouter.jsx"],"names":["React","Routes","Route","Navigate","Tasks","Weather","Currency","Login","Registration","RequireAuth","routeNames","useSelector","AppRouter","isAuth","state","user","LOGIN","REGISTRATION","TASKS","WEATHER","CURRENCY"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,SAAQC,WAAR,QAA0B,aAA1B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAMC,MAAM,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,MAArB,CAA1B;AAEA,sBACI;AAAA,cACC,CAACA,MAAD,gBACG,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEH,UAAU,CAACM,KAAxB;AAA+B,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEN,UAAU,CAACO,YAAxB;AAAsC,QAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,gBAMG,QAAC,MAAD;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAEP,UAAU,CAACQ,KAAxB;AAA+B,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAxC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAER,UAAU,CAACS,OAAxB;AAAiC,QAAA,OAAO,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAET,UAAU,CAACU,QAAxB;AAAkC,QAAA,OAAO,eAAE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAA3C;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEV,UAAU,CAACQ;AAAzB;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ,mBADJ,CAHoB,CAqBpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAnCD;;GAAMN,S;UACaD,W;;;KADbC,S;AAqCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { Routes, Route, Navigate } from 'react-router-dom';\r\nimport Tasks from \"../pages/Tasks\";\r\nimport Weather from \"../pages/Weather\";\r\nimport Currency from \"../pages/Currency\";\r\nimport Login from \"../pages/Login\";\r\nimport Registration from \"../pages/Registration\";\r\nimport RequireAuth from \"../hoc/RequireAuth\";\r\nimport { routeNames } from \"../router\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst AppRouter = () => {\r\n    const isAuth = useSelector(state => state.user.isAuth);\r\n\r\n    return (\r\n        <>\r\n        {!isAuth ?\r\n            <Routes>\r\n                <Route path={routeNames.LOGIN} element={<Login />} />\r\n                <Route path={routeNames.REGISTRATION} element={<Registration />} />\r\n            </Routes>\r\n                :\r\n            <Routes>\r\n                <Route path={routeNames.TASKS} element={<Tasks />} />\r\n                <Route path={routeNames.WEATHER} element={<Weather />} />\r\n                <Route path={routeNames.CURRENCY} element={<Currency />} />\r\n                <Navigate to={routeNames.TASKS} />\r\n            </Routes>\r\n        }\r\n        </>\r\n        );\r\n\r\n    //     <Routes>\r\n    //         <Route path={routeNames.LOGIN} element={<Login />} />\r\n    //         <Route path={routeNames.REGISTRATION} element={<Registration />} />\r\n    //         <Route path={routeNames.MAIN} element={\r\n    //             <RequireAuth>\r\n    //                     <Routes>\r\n    //                         <Route path={routeNames.TASKS} element={<Tasks />} />\r\n    //                         <Route path={routeNames.WEATHER} element={<Weather />} />\r\n    //                         <Route path={routeNames.CURRENCY} element={<Currency />} />\r\n    //                     </Routes>\r\n    //             </RequireAuth>\r\n    //         } />\r\n    //     </Routes>\r\n    // );\r\n};\r\n\r\nexport default AppRouter;\r\n"]},"metadata":{},"sourceType":"module"}