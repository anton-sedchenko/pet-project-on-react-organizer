{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\Desktop\\\\react organizer\\\\organizer\\\\src\\\\components\\\\AppRouter.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Routes, Route } from 'react-router-dom';\nimport Tasks from \"../pages/Tasks\";\nimport Weather from \"../pages/Weather\";\nimport Currency from \"../pages/Currency\";\nimport Login from \"../pages/Login\";\nimport RequireAuth from \"../hoc/RequireAuth\";\nimport { routeNames } from \"../router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  _s();\n\n  const {\n    isAuth\n  } = useSelector(state => state.isAuth);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(RequireAuth, {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Tasks, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Currency, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this) // isAuth\n  //     ?\n  //     <Routes>\n  //         <Route path={routeNames.MAINPAGE} element={<Tasks />} />\n  //         <Route path={routeNames.WEATHER} element={<Weather />} />\n  //         <Route path={routeNames.CURRENCY} element={<Currency />} />\n  //         <Route\n  //             path=\"*\"\n  //             element={<Login />}\n  //         />\n  //     </Routes>\n  //     :\n  //     <Routes>\n  //         <Route path={routeNames.LOGIN} element={<Login />} />\n  //         <Route\n  //             path=\"*\"\n  //             element={<Tasks />}\n  //         />\n  //     </Routes>\n  ;\n};\n\n_s(AppRouter, \"j1iNDdaI87Xf6fHwciId9lA56rc=\", false, function () {\n  return [useSelector];\n});\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["C:/Users/Anton/Desktop/react organizer/organizer/src/components/AppRouter.jsx"],"names":["React","useSelector","Routes","Route","Tasks","Weather","Currency","Login","RequireAuth","routeNames","AppRouter","isAuth","state"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,UAAT,QAA2B,WAA3B;;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAaV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACD,MAAhB,CAA9B;AAEA,sBACI,QAAC,MAAD;AAAA,2BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eACnB,QAAC,WAAD;AAAA,+BACI;AAAA,kCACI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ,CAaI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BJ;AAiCH,CApCD;;GAAMD,S;UACiBT,W;;;KADjBS,S;AAsCN,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Tasks from \"../pages/Tasks\";\r\nimport Weather from \"../pages/Weather\";\r\nimport Currency from \"../pages/Currency\";\r\nimport Login from \"../pages/Login\";\r\nimport RequireAuth from \"../hoc/RequireAuth\";\r\nimport { routeNames } from \"../router\";\r\n\r\nconst AppRouter = () => {\r\n    const { isAuth } = useSelector(state => state.isAuth);\r\n\r\n    return (\r\n        <Routes>\r\n            <Route path=\"/\" element={\r\n                <RequireAuth>\r\n                    <>\r\n                        <Tasks/>\r\n                        <Weather/>\r\n                        <Currency/>\r\n                        <Login/>\r\n                    </>\r\n                </RequireAuth>\r\n            } />\r\n        </Routes>\r\n        // isAuth\r\n        //     ?\r\n        //     <Routes>\r\n        //         <Route path={routeNames.MAINPAGE} element={<Tasks />} />\r\n        //         <Route path={routeNames.WEATHER} element={<Weather />} />\r\n        //         <Route path={routeNames.CURRENCY} element={<Currency />} />\r\n        //         <Route\r\n        //             path=\"*\"\r\n        //             element={<Login />}\r\n        //         />\r\n        //     </Routes>\r\n        //     :\r\n        //     <Routes>\r\n        //         <Route path={routeNames.LOGIN} element={<Login />} />\r\n        //         <Route\r\n        //             path=\"*\"\r\n        //             element={<Tasks />}\r\n        //         />\r\n        //     </Routes>\r\n    );\r\n};\r\n\r\nexport default AppRouter;\r\n"]},"metadata":{},"sourceType":"module"}