{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSelector } from \"react-redux\";\nconst defaultState = {\n  tasks: JSON.parse(localStorage.getItem('tasks')) || []\n};\nexport const tasksReducer = (state = defaultState, action) => {\n  _s();\n\n  switch (action.type) {\n    case 'ADD_TASK':\n      return { ...state,\n        tasks: action.payload\n      };\n\n    case 'REMOVE_TASK':\n      return { ...state,\n        tasks: action.payload\n      };\n\n    case 'UPDATE_TASK':\n      const tasksAtStore = useSelector(state => state.tasks.tasks);\n      const updatedTasksArr = tasksAtStore.map(task => {\n        if (task.id === action.payload.taskId) {\n          return { ...task,\n            pointsDone: action.payload.pointsDone,\n            currentLevel: action.payload.currentLevel\n          };\n        }\n\n        return task;\n      });\n      localStorage.setItem('tasks', JSON.stringify(updatedTasksArr));\n      return { ...state,\n        tasks: updatedTasksArr\n      };\n\n    default:\n      return state;\n  }\n};\n\n_s(tasksReducer, \"+5l9zkpCwMB9c2RclpDk587gkG4=\", false, function () {\n  return [useSelector];\n});","map":{"version":3,"sources":["C:/Users/Anton/Desktop/react organizer/organizer/src/store/tasksReducer.js"],"names":["useSelector","defaultState","tasks","JSON","parse","localStorage","getItem","tasksReducer","state","action","type","payload","tasksAtStore","updatedTasksArr","map","task","id","taskId","pointsDone","currentLevel","setItem","stringify"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,KAA6C;AADnC,CAArB;AAGA,OAAO,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AAAA;;AAC1D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,UAAL;AACI,aAAO,EAAE,GAAGF,KAAL;AAAYN,QAAAA,KAAK,EAAEO,MAAM,CAACE;AAA1B,OAAP;;AACJ,SAAK,aAAL;AACI,aAAO,EAAE,GAAGH,KAAL;AAAYN,QAAAA,KAAK,EAAEO,MAAM,CAACE;AAA1B,OAAP;;AACJ,SAAK,aAAL;AACI,YAAMC,YAAY,GAAGZ,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACN,KAAN,CAAYA,KAAtB,CAAhC;AACA,YAAMW,eAAe,GAAGD,YAAY,CAACE,GAAb,CAAiBC,IAAI,IAAI;AAC7C,YAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACE,OAAP,CAAeM,MAA/B,EAAuC;AACnC,iBAAO,EAAE,GAAGF,IAAL;AAAWG,YAAAA,UAAU,EAAET,MAAM,CAACE,OAAP,CAAeO,UAAtC;AAAkDC,YAAAA,YAAY,EAAEV,MAAM,CAACE,OAAP,CAAeQ;AAA/E,WAAP;AACH;;AACD,eAAOJ,IAAP;AACH,OALuB,CAAxB;AAMAV,MAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BjB,IAAI,CAACkB,SAAL,CAAeR,eAAf,CAA9B;AAEA,aAAO,EAAE,GAAGL,KAAL;AAAYN,QAAAA,KAAK,EAAEW;AAAnB,OAAP;;AACJ;AACI,aAAOL,KAAP;AAjBR;AAmBH,CApBM;;GAAMD,Y;UAOoBP,W","sourcesContent":["import { useSelector } from \"react-redux\";\r\n\r\nconst defaultState = {\r\n    tasks: JSON.parse(localStorage.getItem('tasks')) || []\r\n};\r\nexport const tasksReducer = (state = defaultState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TASK':\r\n            return { ...state, tasks: action.payload };\r\n        case 'REMOVE_TASK':\r\n            return { ...state, tasks: action.payload };\r\n        case 'UPDATE_TASK':\r\n            const tasksAtStore = useSelector(state => state.tasks.tasks);\r\n            const updatedTasksArr = tasksAtStore.map(task => {\r\n                if (task.id === action.payload.taskId) {\r\n                    return { ...task, pointsDone: action.payload.pointsDone, currentLevel: action.payload.currentLevel };\r\n                }\r\n                return task;\r\n            });\r\n            localStorage.setItem('tasks', JSON.stringify(updatedTasksArr));\r\n\r\n            return { ...state, tasks: updatedTasksArr };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}