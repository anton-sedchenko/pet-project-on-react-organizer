{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\Desktop\\\\react organizer\\\\organizer\\\\src\\\\components\\\\task\\\\Task.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Task.css';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task({\n  task,\n  num\n}) {\n  _s();\n\n  const dispatch = useDispatch();\n  const tasksAtStore = useSelector(state => state.tasks.tasks);\n\n  function increment() {\n    let pointsDone = task.pointsDone;\n    let currentLevel = task.currentLevel;\n\n    if (pointsDone === task.levelUpLimit && currentLevel !== task.levelUpType.length - 1) {\n      pointsDone = 0;\n      currentLevel += 1;\n      dispatch({\n        type: 'UPDATE_TASK',\n        payload: {\n          taskId: task.id,\n          pointsDone,\n          currentLevel,\n          tasksAtStore\n        }\n      });\n      return;\n    } else if (pointsDone === task.levelUpLimit && currentLevel === task.levelUpType.length - 1) {\n      return;\n    }\n\n    pointsDone += 1;\n    dispatch({\n      type: 'UPDATE_TASK',\n      payload: {\n        taskId: task.id,\n        pointsDone,\n        currentLevel,\n        tasksAtStore\n      }\n    });\n  }\n\n  function decrement() {\n    let pointsDone = task.pointsDone;\n    let currentLevel = task.currentLevel;\n\n    if (pointsDone === 0 && currentLevel !== 0) {\n      pointsDone = task.levelUpLimit;\n      currentLevel -= 1;\n      dispatch({\n        type: 'UPDATE_TASK',\n        payload: {\n          taskId: task.id,\n          pointsDone,\n          currentLevel,\n          tasksAtStore\n        }\n      });\n      return;\n    } else if (pointsDone === 0 && currentLevel === 0) {\n      return;\n    }\n\n    pointsDone -= 1;\n    dispatch({\n      type: 'UPDATE_TASK',\n      payload: {\n        taskId: task.id,\n        pointsDone,\n        currentLevel,\n        tasksAtStore\n      }\n    });\n  }\n\n  const completeTask = taskId => {\n    dispatch({\n      type: 'UPDATE_TASK',\n      payload: {\n        taskId: task.id,\n        tasksAtStore\n      }\n    });\n  };\n\n  const removeTask = taskId => {\n    const newTasksArr = tasksAtStore.filter(task => task.id !== taskId);\n    dispatch({\n      type: 'REMOVE_TASK',\n      payload: newTasksArr\n    });\n    localStorage.setItem('tasks', JSON.stringify(newTasksArr));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: !task.complete ? 'tasks-table__row' : 'tasks-table__row task-done',\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"tasks-table__cell\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: !task.complete ? 'tasks-complete-indicator' : 'tasks-complete-indicator task-done'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), num]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"tasks-table__cell\",\n      children: task.taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"tasks-table__cell\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-table__cell-points-done\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tasks-table__points-value\",\n          children: [task.pointsDone, \" / \", task.levelUpLimit, \" \", task.pointsType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: increment,\n            className: \"add-task-table__btn\",\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: decrement,\n            className: \"add-task-table__btn\",\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"tasks-table__cell\",\n      children: task.levelUpType[task.currentLevel]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"tasks-table__cell\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => completeTask(task.id),\n        className: \"add-task-table__btn\",\n        children: \"Done\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => removeTask(task.id),\n        className: \"add-task-table__btn\",\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Task, \"nC+NQNg0KOgoU3DlUDcN8ab6f8s=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/Anton/Desktop/react organizer/organizer/src/components/task/Task.jsx"],"names":["React","useDispatch","useSelector","Task","task","num","dispatch","tasksAtStore","state","tasks","increment","pointsDone","currentLevel","levelUpLimit","levelUpType","length","type","payload","taskId","id","decrement","completeTask","removeTask","newTasksArr","filter","localStorage","setItem","JSON","stringify","complete","taskName","pointsType"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Task.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nfunction Task({ task, num }) {\r\n    const dispatch = useDispatch();\r\n    const tasksAtStore = useSelector(state => state.tasks.tasks);\r\n\r\n    function increment() {\r\n        let pointsDone = task.pointsDone;\r\n        let currentLevel = task.currentLevel;\r\n\r\n        if (pointsDone === task.levelUpLimit && currentLevel !== task.levelUpType.length - 1) {\r\n            pointsDone = 0;\r\n            currentLevel += 1;\r\n            dispatch({ type: 'UPDATE_TASK', payload: {taskId: task.id, pointsDone, currentLevel, tasksAtStore} });\r\n\r\n            return;\r\n        } else if (pointsDone === task.levelUpLimit && currentLevel === task.levelUpType.length - 1) {\r\n\r\n            return;\r\n        }\r\n        pointsDone += 1;\r\n        dispatch({ type: 'UPDATE_TASK', payload: {taskId: task.id, pointsDone, currentLevel, tasksAtStore} });\r\n    }\r\n\r\n    function decrement() {\r\n        let pointsDone = task.pointsDone;\r\n        let currentLevel = task.currentLevel;\r\n\r\n        if (pointsDone === 0 && currentLevel !== 0) {\r\n            pointsDone = task.levelUpLimit;\r\n            currentLevel -= 1;\r\n            dispatch({ type: 'UPDATE_TASK', payload: {taskId: task.id, pointsDone, currentLevel, tasksAtStore} });\r\n\r\n            return;\r\n        } else if (pointsDone === 0 && currentLevel === 0) {\r\n\r\n            return;\r\n        }\r\n\r\n        pointsDone -= 1;\r\n        dispatch({ type: 'UPDATE_TASK', payload: {taskId: task.id, pointsDone, currentLevel, tasksAtStore} });\r\n    }\r\n\r\n    const completeTask = (taskId) => {\r\n        dispatch({ type: 'UPDATE_TASK', payload: {taskId: task.id, tasksAtStore} });\r\n    }\r\n\r\n    const removeTask = (taskId) => {\r\n        const newTasksArr = tasksAtStore.filter(task => task.id !== taskId);\r\n\r\n        dispatch({ type: 'REMOVE_TASK', payload: newTasksArr });\r\n        localStorage.setItem('tasks', JSON.stringify(newTasksArr));\r\n    }\r\n\r\n    return (\r\n        <tr className={ !task.complete ? 'tasks-table__row' : 'tasks-table__row task-done' }>\r\n            <td className=\"tasks-table__cell\">\r\n                <div className={ !task.complete ? 'tasks-complete-indicator' : 'tasks-complete-indicator task-done'}></div>\r\n                { num }\r\n            </td>\r\n            <td className=\"tasks-table__cell\">{ task.taskName }</td>\r\n            <td className=\"tasks-table__cell\">\r\n                <div className=\"tasks-table__cell-points-done\">\r\n                    <span className=\"tasks-table__points-value\">\r\n                        { task.pointsDone } / { task.levelUpLimit } { task.pointsType }\r\n                    </span>\r\n                    <div>\r\n                        <button\r\n                            onClick={ increment }\r\n                            className=\"add-task-table__btn\"\r\n                        >+</button>\r\n                        <button\r\n                            onClick={ decrement }\r\n                            className=\"add-task-table__btn\"\r\n                        >-</button>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n            <td className=\"tasks-table__cell\">{ task.levelUpType[task.currentLevel] }</td>\r\n            <td className=\"tasks-table__cell\">\r\n                <button\r\n                    onClick={ () => completeTask(task.id) }\r\n                    className=\"add-task-table__btn\"\r\n                >Done</button>\r\n                <button\r\n                    onClick={ () => removeTask(task.id) }\r\n                    className=\"add-task-table__btn\"\r\n                >Delete</button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}