{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anton\\\\Desktop\\\\react organizer\\\\organizer\\\\src\\\\components\\\\task\\\\Task.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Task({\n  task\n}) {\n  _s();\n\n  const [pointsDone, setPointsDone] = useState(task.currentPointsValue);\n  const [currentLevel, setCurrentLevel] = useState(task.levelUpType[0]);\n\n  function increment() {\n    if (pointsDone === task.levelUpLimit) {\n      setPointsDone(0);\n      setCurrentLevel(task.levelUpType[0]);\n      return;\n    }\n\n    setPointsDone(pointsDone + 1);\n  }\n\n  function decrement() {\n    setPointsDone(pointsDone === 1 ? pointsDone : pointsDone - 1);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    className: \"tasks-table__row\",\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"tasks-table__cell\",\n      children: task.taskName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"tasks-table__cell\",\n      children: [pointsDone, \" / 10 \", task.pointsType, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decrement,\n        children: \"-\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"tasks-table__cell\",\n      children: task.currentLevel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"tasks-table__cell\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n/*<p>{ value }{ likes }</p>*/\n\n/*<input*/\n\n/*    type=\"text\"*/\n\n/*    value={ value }*/\n\n/*    onChange={ event => setValue(event.target.value) }*/\n\n/*/>*/\n\n/*<Button variant=\"contained\" onClick={ increment }>Like</Button>*/\n\n/*<Button variant=\"outlined\" onClick={ decrement }>Dislike</Button>*/\n\n\n_s(Task, \"VsS+qBF5liH7DYxp9sD8d0ns598=\");\n\n_c = Task;\nexport default Task;\n\nvar _c;\n\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"sources":["C:/Users/Anton/Desktop/react organizer/organizer/src/components/task/Task.js"],"names":["React","useState","Task","task","pointsDone","setPointsDone","currentPointsValue","currentLevel","setCurrentLevel","levelUpType","increment","levelUpLimit","decrement","taskName","pointsType"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA;AAAF,CAAd,EAAwB;AAAA;;AACpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAACE,IAAI,CAACG,kBAAN,CAA5C;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAACE,IAAI,CAACM,WAAL,CAAiB,CAAjB,CAAD,CAAhD;;AAEA,WAASC,SAAT,GAAqB;AAEjB,QAAIN,UAAU,KAAKD,IAAI,CAACQ,YAAxB,EAAsC;AAClCN,MAAAA,aAAa,CAAC,CAAD,CAAb;AACAG,MAAAA,eAAe,CAACL,IAAI,CAACM,WAAL,CAAiB,CAAjB,CAAD,CAAf;AAEA;AACH;;AAEDJ,IAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH;;AAED,WAASQ,SAAT,GAAqB;AACjBP,IAAAA,aAAa,CAACD,UAAU,KAAK,CAAf,GAAmBA,UAAnB,GAAgCA,UAAU,GAAG,CAA9C,CAAb;AACH;;AAED,sBACI;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,gBAAoCD,IAAI,CAACU;AAAzC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,iBACMT,UADN,YAC0BD,IAAI,CAACW,UAD/B,eAEI;AAAQ,QAAA,OAAO,EAAGJ,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAGE,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,gBAAoCT,IAAI,CAACI;AAAzC;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAI,MAAA,SAAS,EAAC,mBAAd;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;AACD;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;GA3CSL,I;;KAAAA,I;AA4CT,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Task({ task }) {\r\n    const [pointsDone, setPointsDone] = useState(task.currentPointsValue);\r\n    const [currentLevel, setCurrentLevel] = useState(task.levelUpType[0]);\r\n\r\n    function increment() {\r\n\r\n        if (pointsDone === task.levelUpLimit) {\r\n            setPointsDone(0);\r\n            setCurrentLevel(task.levelUpType[0])\r\n\r\n            return;\r\n        }\r\n\r\n        setPointsDone(pointsDone + 1);\r\n    }\r\n\r\n    function decrement() {\r\n        setPointsDone(pointsDone === 1 ? pointsDone : pointsDone - 1);\r\n    }\r\n\r\n    return (\r\n        <tr className=\"tasks-table__row\">\r\n            <td className=\"tasks-table__cell\">{ task.taskName }</td>\r\n            <td className=\"tasks-table__cell\">\r\n                { pointsDone } / 10 { task.pointsType }\r\n                <button onClick={ increment }>+</button>\r\n                <button onClick={ decrement }>-</button>\r\n            </td>\r\n            <td className=\"tasks-table__cell\">{ task.currentLevel }</td>\r\n            <td className=\"tasks-table__cell\">\r\n                <button>Edit</button>\r\n                <button>Delete</button>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n/*<p>{ value }{ likes }</p>*/\r\n/*<input*/\r\n/*    type=\"text\"*/\r\n/*    value={ value }*/\r\n/*    onChange={ event => setValue(event.target.value) }*/\r\n/*/>*/\r\n/*<Button variant=\"contained\" onClick={ increment }>Like</Button>*/\r\n/*<Button variant=\"outlined\" onClick={ decrement }>Dislike</Button>*/\r\nexport default Task;\r\n"]},"metadata":{},"sourceType":"module"}